structure
 - intro
   - two things to remember
   - premise: automated testing is good
   - problems with automated acceptance testing
   - what is sdd?
 - example
   - example process and application
   - show two scenarios
   - introduce new story
   - show where it affects scenarios
   - discuss things that don't go in the scenarios
   - walk through process for implementing
 - concerns
   - how to drive system
   - fixture code
   - design of underlying code
   - analysis/vision stuff
   - QA/Dev coordination
   - technologies
   - dealing with failing scenarios
 - Twist demo
   - sales pitch
   - refactoring
   - reuse and intellisense
   - drivers
   - recording implementations
   - organizing scenarios
   - show unimplemented stuff
 - outro
   - twist
   - acknowledgements
   - sdd summary
   - two things to remember

new
 - first scenario: walking skeleton
 - possibility of non-automated approach
 - workflow vs actor layer

todo
 - refer to 'customer tests'
 - move acks to intro

Old acks

Simon Stewart taught me how to model the application in my tests. He
also wrote WebDriver which is a great service to the human race.

Dan Bodart made me understand what it really means to make an
application testable.

Gitanjali Venkatraman is the best tester I have ever worked with. A
lot of my ideas about collaboration between testers and developers
come from watching her work.

Ian Cartwright once gave me a stern talking to about an application
that I was working on. I haven't been the same since.

The approach of Scenario-Driven Development is very close to that of
Behaviour-Driven Development, which was developed by Dan North, Chris
Matts and others. I have been listening to what they say.

Nat Pryce and Steve Freeman's book gives a better account of how to
use tests to drive the coding process than I could hope to do. All
developers should have read it.

And as you will have spotted if you are familiar with them, the idea
of scenarios that I presented is heavily influenced by Jeff Patton's
writing on story mapping.
